{"version":3,"sources":["assets/icons/Repositories.svg","assets/icons/Stars.svg","assets/icons/Followers.svg","assets/icons/Following.svg","assets/icons/RepositoriesLight.svg","components/profile-info/ProfileInfo.jsx","components/about/About.jsx","components/organizations/Organizations.jsx","components/repositories/Repositories.jsx","components/profile-head/ProfileHead.jsx","App.js","serviceWorker.js","theme.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","infoLabel","fontFamily","fontSize","lineHeight","fontWeight","letterSpacing","color","infoNumber","infoIcon","marginBottom","infoContainer","textAlign","width","infoContainerBorder","borderRight","ProfileInfo","repositoriesCount","starsCount","followersCount","followingCount","classes","Grid","container","direction","justify","item","className","alt","src","RepositoriesIcon","StarsIcon","FollowersIcon","FollowingIcon","aboutText","paddingTop","About","description","Fragment","Typography","variant","organizationUrls","marginTop","organizationImage","Organizations","orgImageUrls","spacing","map","url","repositoriesInfoContainer","repositoryContainer","height","border","borderRadius","repositoryIconContainer","display","justifyContent","alignItems","repositoryTitle","repositoryDescriptionFocused","repositoryDescription","Repositories","repositoriesInfo","focused","repository","index","xs","RepositoriesLightIcon","repositoryIcon","title","profileHeadContainer","margin","avatar","profileName","profileUsername","profileUrl","profileEmail","profileButton","ProfileHead","profile","avatarUrl","name","username","email","Button","body","padding","profileHead","backgroundColor","position","top","paddingBottom","profileBody","paddingLeft","paddingRight","App","Container","maxWidth","Boolean","window","location","hostname","match","createMuiTheme","typography","h1","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.68f467f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Repositories.da7b7a61.svg\";","module.exports = __webpack_public_path__ + \"static/media/Stars.7441555e.svg\";","module.exports = __webpack_public_path__ + \"static/media/Followers.583ef377.svg\";","module.exports = __webpack_public_path__ + \"static/media/Following.f311b4dc.svg\";","module.exports = __webpack_public_path__ + \"static/media/RepositoriesLight.5aa41bcd.svg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport RepositoriesIcon from '../../assets/icons/Repositories.svg';\r\nimport StarsIcon from '../../assets/icons/Stars.svg';\r\nimport FollowersIcon from '../../assets/icons/Followers.svg';\r\nimport FollowingIcon from '../../assets/icons/Following.svg';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  infoLabel: {\r\n    fontFamily: 'Inter, sans-serif',\r\n    fontSize: '9px',\r\n    lineHeight: '11px',\r\n    fontWeight: '300',\r\n    letterSpacing: '0.02em',\r\n    color: '#7A7A7A'\r\n  },\r\n  infoNumber: {\r\n    fontFamily: 'Inter, sans-serif',\r\n    fontSize: '14px',\r\n    lineHeight: '17px',\r\n    fontWeight: '700',\r\n    color: '#23292D'\r\n  },\r\n  infoIcon: {\r\n    marginBottom: '0.3em'\r\n  },\r\n  infoContainer: {\r\n    textAlign: 'center',\r\n    width: \"25%\"\r\n  },\r\n  infoContainerBorder: {\r\n    borderRight: '1.5px solid #DADADA'\r\n  }\r\n}))\r\n\r\nfunction ProfileInfo({ repositoriesCount, starsCount, followersCount, followingCount }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n  <Grid container direction='row' justify='center'>\r\n    <Grid item className={classes.infoContainer}>\r\n      <Grid container direction='column'>\r\n        <Grid item>\r\n          <img alt='Repositories icon' src={RepositoriesIcon} className={classes.infoIcon} />\r\n        </Grid>\r\n        <Grid item className={classes.infoContainerBorder}>\r\n          <div className={classes.infoNumber}>{repositoriesCount}</div>\r\n          <div className={classes.infoLabel}>Repositories</div>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n    <Grid item className={classes.infoContainer}>\r\n      <Grid container direction='column'>\r\n        <Grid item>\r\n          <img alt='Repositories icon' src={StarsIcon} className={classes.infoIcon} />\r\n        </Grid>\r\n        <Grid item className={classes.infoContainerBorder}>\r\n          <div className={classes.infoNumber}>{starsCount}</div>\r\n          <div className={classes.infoLabel}>Stars</div>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n    <Grid item className={classes.infoContainer}>\r\n      <Grid container direction='column'>\r\n        <Grid item>\r\n          <img alt='Repositories icon' src={FollowersIcon} className={classes.infoIcon} />\r\n        </Grid>\r\n        <Grid item className={classes.infoContainerBorder}>\r\n          <div className={classes.infoNumber}>{followersCount}</div>\r\n          <div className={classes.infoLabel}>Followers</div>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n    <Grid item className={classes.infoContainer}>\r\n      <Grid container direction='column'>\r\n        <Grid item>\r\n          <img alt='Repositories icon' src={FollowingIcon} className={classes.infoIcon} />\r\n        </Grid>\r\n        <Grid item>\r\n          <div className={classes.infoNumber}>{followingCount}</div>\r\n          <div className={classes.infoLabel}>Following</div>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  </Grid>\r\n  );\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  aboutText: {\r\n    fontFamily: 'Inter, sans-serif',\r\n    fontSize: '14px',\r\n    lineHeight: '20px',\r\n    fontWeight: '300',\r\n    letterSpacing: '0.01em',\r\n    color: '#7A7A7A',\r\n\r\n    paddingTop: '0.4em'\r\n  }\r\n}))\r\n\r\nfunction About({ description }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant='h1'>About</Typography>\r\n      <div className={classes.aboutText}>\r\n        {description}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  organizationUrls: {\r\n    marginTop: '0.4em'\r\n  },\r\n  organizationImage: {\r\n    width: '3em'\r\n  }\r\n}))\r\n\r\nfunction Organizations({ orgImageUrls }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant='h1'>Organizations</Typography>\r\n      <Grid container direction='row' spacing={1} className={classes.organizationUrls}>\r\n        {\r\n          orgImageUrls.map(url =>\r\n            <Grid item>\r\n              <img className={classes.organizationImage} alt='organization' src={url} />\r\n            </Grid>\r\n          )\r\n        }\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Organizations;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport RepositoriesLightIcon from '../../assets/icons/RepositoriesLight.svg';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  repositoriesInfoContainer: {\r\n    marginTop: '0.4em'\r\n  },\r\n  repositoryContainer: {\r\n    height: '4em',\r\n    border: '1px solid #DADADA',\r\n    borderRadius: '10px'\r\n  },\r\n  repositoryIconContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  repositoryTitle: {\r\n    fontFamily: 'Inter, sans-serif',\r\n    fontSize: '18px',\r\n    lineHeight: '21px',\r\n    color: '#1F1F1F'\r\n  },\r\n  repositoryDescriptionFocused: {\r\n    fontFamily: 'Inter, sans-serif',\r\n    fontSize: '12px',\r\n    lineHeight: '20px',\r\n    color: '#1F1F1F'\r\n  },\r\n  repositoryDescription: {\r\n    fontFamily: 'Inter, sans-serif',\r\n    fontSize: '12px',\r\n    lineHeight: '20px',\r\n    color: '#7A7A7A'\r\n  }\r\n}))\r\n\r\nfunction Repositories({ repositoriesInfo, focused }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant='h1'>Popular Repositories</Typography>\r\n      <Grid container direction='column' spacing={1} justifyContent='center'\r\n            className={classes.repositoriesInfoContainer}>\r\n        {repositoriesInfo.map((repository, index) =>\r\n          <Grid item>\r\n            <Grid container direction='row' alignItems='center' className={classes.repositoryContainer}>\r\n              <Grid item xs={3} className={classes.repositoryIconContainer}>\r\n                <img alt='repository icon' src={RepositoriesLightIcon} className={classes.repositoryIcon} />\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <Grid container direction='column'>\r\n                  <Grid item>\r\n                    <div className={classes.repositoryTitle}>\r\n                      {repository.title}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    {\r\n                      index===focused?\r\n                        <div className={classes.repositoryDescriptionFocused}>\r\n                          {repository.description}\r\n                        </div>\r\n                      :\r\n                        <div className={classes.repositoryDescription}>\r\n                          {repository.description}\r\n                        </div>\r\n                    }\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        )\r\n        }\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Repositories;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  profileHeadContainer: {\r\n    textAlign: 'center',\r\n    margin: '0 auto'\r\n  },\r\n  avatar: {\r\n    width: '8em',\r\n    height: '8em'\r\n  },\r\n  profileName: {\r\n    fontFamily: 'Inter, sans-serif',\r\n    fontSize: '26px',\r\n    lineHeight: '31px',\r\n    color: '#23292D'\r\n  },\r\n  profileUsername: {\r\n    fontSize: '18px',\r\n    lineHeight: '21px',\r\n    color: '#1F1F1F',\r\n    marginTop: '0.2em'\r\n  },\r\n  profileUrl: {\r\n    fontSize: '14px',\r\n    lineHeight: '20px',\r\n    color: '#1F1F1F',\r\n    marginTop: '0.2em'\r\n  },\r\n  profileEmail: {\r\n    fontSize: '14px',\r\n    lineHeight: '20px',\r\n    color: '#1F1F1F',\r\n    marginTop: '-0.2em'\r\n  },\r\n  profileButton: {\r\n    border: '2px solid #23292D',\r\n    borderRadius: '30px',\r\n    marginTop: '0.8em',\r\n    width: '8em'\r\n  }\r\n}))\r\n\r\nconst ProfileHead = ({ profile }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.profileHeadContainer}>\r\n      <img alt='avatar' src={profile.avatarUrl} className={classes.avatar}/>\r\n      <div className={classes.profileName}>\r\n        {profile.name}\r\n      </div>\r\n      <div className={classes.profileUsername}>\r\n        {profile.username}\r\n      </div>\r\n      <div className={classes.profileUrl}>\r\n        {profile.url}\r\n      </div>\r\n      <div className={classes.profileEmail}>\r\n        {profile.email}\r\n      </div>\r\n      <Button variant='outlined' className={classes.profileButton}>\r\n        Follow\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileHead;\r\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\n\nimport ProfileInfo from './components/profile-info/ProfileInfo';\nimport About from './components/about/About';\nimport Organizations from './components/organizations/Organizations';\nimport Repositories from './components/repositories/Repositories';\nimport ProfileHead from './components/profile-head/ProfileHead';\n\n// import { getGithubProfile } from './api/github-api';\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      margin: 0,\n      padding: 0,\n    }\n  },\n  profileHead: {\n    backgroundColor: 'white',\n    position: 'sticky',\n    top: 0,\n    width: '100%',\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(3),\n    margin: '0'\n  },\n  profileBody: {\n    marginBottom: theme.spacing(8),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  }\n}))\n\n// Remember 50 api calls per hour\n\nfunction App() {\n  const classes = useStyles();\n\n  const description = 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Cupiditate distinctio eum ex illum, iste minima optio vel? Aliquam animi, culpa et id nam neque tempore ut? Doloremque dolores non saepe.'\n\n  // const [profile, setProfile] = useState({});\n\n  // useEffect(() => {\n  //   getGithubProfile('oscaramos')\n  //     .then(profile => {\n  //       setProfile(profile)\n  //     })\n  // }, [])\n\n  const orgImageUrls = ['https://avatars1.githubusercontent.com/u/35373879?v=4',\n    'https://avatars1.githubusercontent.com/u/35373879?v=4']\n\n  const repositoriesInfo = [\n    {\n      title: 'Data manager',\n      description: 'Quick start for big data projects'\n    },\n    {\n      title: 'Data manager',\n      description: 'Quick start for big data projects'\n    },\n    {\n      title: 'Data manager',\n      description: 'Quick start for big data projects'\n    }\n  ]\n\n  const profile = {\n    name: 'Ashley Simpson',\n    username: 'ashley',\n    url: 'www.ahsleydev.com',\n    avatarUrl: 'https://avatars1.githubusercontent.com/u/21105282?v=4',\n    email: 'ashley@techcompany.com',\n  }\n\n  return (\n    <Container maxWidth='xs'>\n      <div className={classes.profileHead}>\n        <ProfileHead profile={profile} />\n      </div>\n      <Grid container direction='column' justifyContent='center' spacing={3}\n            className={classes.profileBody}>\n        <Grid item>\n          <ProfileInfo repositoriesCount={3} starsCount={123} followersCount={15} followingCount={60} />\n        </Grid>\n        <Grid item>\n          <About description={description} />\n        </Grid>\n        <Grid item>\n          <Organizations orgImageUrls={orgImageUrls} />\n        </Grid>\n        <Grid item>\n          <Repositories repositoriesInfo={repositoriesInfo} focused={0} />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    h1: {\r\n      fontFamily: 'Inter, sans-serif',\r\n      fontWeight: '700',\r\n      fontSize: '18px',\r\n      lineHeight: '21px',\r\n      color: '#1F1F1F'\r\n    }\r\n  }\r\n})\r\n\r\nexport default theme;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport theme from './theme'\nimport { ThemeProvider } from '@material-ui/core/styles';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}