{"version":3,"sources":["assets/icons/Repositories.svg","assets/icons/Stars.svg","assets/icons/Followers.svg","assets/icons/Following.svg","assets/icons/RepositoriesLight.svg","components/profile-info/ProfileInfo.jsx","components/about/About.jsx","components/organizations/Organizations.jsx","components/repositories/Repositories.jsx","components/profile-head/ProfileHead.jsx","pages/Profile.js","pages/InputUsername.js","components/snackbar-message/SnackbarMessage.jsx","api/github-api.js","App.js","serviceWorker.js","theme.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","infoLabel","fontFamily","fontSize","lineHeight","fontWeight","letterSpacing","color","infoNumber","infoIcon","marginBottom","infoContainer","textAlign","width","infoContainerBorder","borderRight","ProfileInfo","repositoriesCount","starsCount","followersCount","followingCount","classes","Grid","container","direction","justify","item","className","alt","src","RepositoriesIcon","StarsIcon","FollowersIcon","FollowingIcon","aboutText","paddingTop","About","description","Fragment","Typography","variant","organizationUrls","marginTop","organizationImage","Organizations","organizations","spacing","map","org","key","avatarUrl","repositoriesInfoContainer","repositoryContainer","height","border","borderRadius","repositoryIconContainer","display","justifyContent","alignItems","repositoryTitle","repositoryDescriptionFocused","repositoryDescription","Repositories","repositories","focused","repository","index","xs","RepositoriesLightIcon","repositoryIcon","name","profileHeadContainer","margin","avatar","profileName","profileUsername","profileBlogUrl","profileEmail","profileButton","ProfileHead","profile","username","blog","email","Button","profileHead","backgroundColor","position","top","zIndex","paddingBottom","profileBody","paddingLeft","paddingRight","viewport","overflow","cursor","ScrollArea","viewportClass","children","id","App","useEffect","ScrollBooster","document","querySelector","content","scrollMode","CssTextField","withStyles","root","borderBottomColor","TextField","usernameContainer","submit","InputUsername","setUsername","handleSearch","align","label","onChange","e","target","value","onClick","SnackbarMessage","open","handleClose","message","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","getUserStars","fetch","then","resp","json","starred","length","getUserProfile","getUserOrganizations","orgs","avatar_url","getUserRepositories","repos","repo","defaultProfile","useState","route","setRoute","setOpen","setProfile","Container","maxWidth","promises","Promise","all","values","stars","login","public_repos","followers","following","bio","getGithubProfile","catch","error","console","log","Profile","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","createMuiTheme","typography","h1","ReactDOM","render","StrictMode","ThemeProvider","getElementById","URL","process","href","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bd267a59.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Repositories.da7b7a61.svg\";","module.exports = __webpack_public_path__ + \"static/media/Stars.7441555e.svg\";","module.exports = __webpack_public_path__ + \"static/media/Followers.583ef377.svg\";","module.exports = __webpack_public_path__ + \"static/media/Following.f311b4dc.svg\";","module.exports = __webpack_public_path__ + \"static/media/RepositoriesLight.5aa41bcd.svg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport RepositoriesIcon from '../../assets/icons/Repositories.svg';\r\nimport StarsIcon from '../../assets/icons/Stars.svg';\r\nimport FollowersIcon from '../../assets/icons/Followers.svg';\r\nimport FollowingIcon from '../../assets/icons/Following.svg';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  infoLabel: {\r\n    fontFamily: 'Inter, sans-serif',\r\n    fontSize: '9px',\r\n    lineHeight: '11px',\r\n    fontWeight: '300',\r\n    letterSpacing: '0.02em',\r\n    color: '#7A7A7A'\r\n  },\r\n  infoNumber: {\r\n    fontFamily: 'Inter, sans-serif',\r\n    fontSize: '14px',\r\n    lineHeight: '17px',\r\n    fontWeight: '700',\r\n    color: '#23292D'\r\n  },\r\n  infoIcon: {\r\n    marginBottom: '0.3em'\r\n  },\r\n  infoContainer: {\r\n    textAlign: 'center',\r\n    width: \"25%\"\r\n  },\r\n  infoContainerBorder: {\r\n    borderRight: '1.5px solid #DADADA'\r\n  }\r\n}))\r\n\r\nfunction ProfileInfo({ repositoriesCount, starsCount, followersCount, followingCount }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n  <Grid container direction='row' justify='center'>\r\n    <Grid item className={classes.infoContainer}>\r\n      <Grid container direction='column'>\r\n        <Grid item>\r\n          <img alt='Repositories icon' src={RepositoriesIcon} className={classes.infoIcon} />\r\n        </Grid>\r\n        <Grid item className={classes.infoContainerBorder}>\r\n          <div className={classes.infoNumber}>{repositoriesCount}</div>\r\n          <div className={classes.infoLabel}>Repositories</div>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n    <Grid item className={classes.infoContainer}>\r\n      <Grid container direction='column'>\r\n        <Grid item>\r\n          <img alt='Repositories icon' src={StarsIcon} className={classes.infoIcon} />\r\n        </Grid>\r\n        <Grid item className={classes.infoContainerBorder}>\r\n          <div className={classes.infoNumber}>{starsCount}</div>\r\n          <div className={classes.infoLabel}>Stars</div>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n    <Grid item className={classes.infoContainer}>\r\n      <Grid container direction='column'>\r\n        <Grid item>\r\n          <img alt='Repositories icon' src={FollowersIcon} className={classes.infoIcon} />\r\n        </Grid>\r\n        <Grid item className={classes.infoContainerBorder}>\r\n          <div className={classes.infoNumber}>{followersCount}</div>\r\n          <div className={classes.infoLabel}>Followers</div>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n    <Grid item className={classes.infoContainer}>\r\n      <Grid container direction='column'>\r\n        <Grid item>\r\n          <img alt='Repositories icon' src={FollowingIcon} className={classes.infoIcon} />\r\n        </Grid>\r\n        <Grid item>\r\n          <div className={classes.infoNumber}>{followingCount}</div>\r\n          <div className={classes.infoLabel}>Following</div>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  </Grid>\r\n  );\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  aboutText: {\r\n    fontFamily: 'Inter, sans-serif',\r\n    fontSize: '14px',\r\n    lineHeight: '20px',\r\n    fontWeight: '300',\r\n    letterSpacing: '0.01em',\r\n    color: '#7A7A7A',\r\n\r\n    paddingTop: '0.4em'\r\n  }\r\n}))\r\n\r\nfunction About({ description }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant='h1'>About</Typography>\r\n      <div className={classes.aboutText}>\r\n        {description}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  organizationUrls: {\r\n    marginTop: '0.4em'\r\n  },\r\n  organizationImage: {\r\n    width: '3em'\r\n  }\r\n}))\r\n\r\nfunction Organizations({ organizations }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant='h1'>Organizations</Typography>\r\n      <Grid container direction='row' spacing={1} className={classes.organizationUrls}>\r\n        {\r\n          organizations.map(org =>\r\n            <Grid item key={org.avatarUrl}>\r\n              <img className={classes.organizationImage} alt='organization' src={org.avatarUrl} />\r\n            </Grid>\r\n          )\r\n        }\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Organizations;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport RepositoriesLightIcon from '../../assets/icons/RepositoriesLight.svg';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  repositoriesInfoContainer: {\r\n    marginTop: '0.4em'\r\n  },\r\n  repositoryContainer: {\r\n    height: '4em',\r\n    border: '1px solid #DADADA',\r\n    borderRadius: '10px'\r\n  },\r\n  repositoryIconContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  repositoryTitle: {\r\n    fontFamily: 'Inter, sans-serif',\r\n    fontSize: '18px',\r\n    lineHeight: '21px',\r\n    color: '#1F1F1F'\r\n  },\r\n  repositoryDescriptionFocused: {\r\n    fontFamily: 'Inter, sans-serif',\r\n    fontSize: '12px',\r\n    lineHeight: '20px',\r\n    color: '#1F1F1F'\r\n  },\r\n  repositoryDescription: {\r\n    fontFamily: 'Inter, sans-serif',\r\n    fontSize: '12px',\r\n    lineHeight: '20px',\r\n    color: '#7A7A7A'\r\n  }\r\n}))\r\n\r\nfunction Repositories({ repositories, focused }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant='h1'>Repositories</Typography>\r\n      <Grid container direction='column' spacing={1} justify='center'\r\n            className={classes.repositoriesInfoContainer}>\r\n        {repositories.map((repository, index) =>\r\n          <Grid item key={index}>\r\n            <Grid container direction='row' alignItems='center' className={classes.repositoryContainer}>\r\n              <Grid item xs={3} className={classes.repositoryIconContainer}>\r\n                <img alt='repository icon' src={RepositoriesLightIcon} className={classes.repositoryIcon} />\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <Grid container direction='column'>\r\n                  <Grid item>\r\n                    <div className={classes.repositoryTitle}>\r\n                      {repository.name}\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    {\r\n                      index===focused?\r\n                        <div className={classes.repositoryDescriptionFocused}>\r\n                          {repository.description}\r\n                        </div>\r\n                      :\r\n                        <div className={classes.repositoryDescription}>\r\n                          {repository.description}\r\n                        </div>\r\n                    }\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        )\r\n        }\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Repositories;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  profileHeadContainer: {\r\n    textAlign: 'center',\r\n    margin: '0 auto'\r\n  },\r\n  avatar: {\r\n    width: '8em',\r\n    height: '8em'\r\n  },\r\n  profileName: {\r\n    fontFamily: 'Inter, sans-serif',\r\n    fontSize: '26px',\r\n    lineHeight: '31px',\r\n    color: '#23292D'\r\n  },\r\n  profileUsername: {\r\n    fontSize: '18px',\r\n    lineHeight: '21px',\r\n    color: '#1F1F1F',\r\n    marginTop: '0.2em'\r\n  },\r\n  profileBlogUrl: {\r\n    fontSize: '14px',\r\n    lineHeight: '20px',\r\n    color: '#1F1F1F',\r\n    marginTop: '0.2em'\r\n  },\r\n  profileEmail: {\r\n    fontSize: '14px',\r\n    lineHeight: '20px',\r\n    color: '#1F1F1F',\r\n    marginTop: '-0.2em'\r\n  },\r\n  profileButton: {\r\n    border: '2px solid #23292D',\r\n    borderRadius: '30px',\r\n    marginTop: '0.8em',\r\n    width: '8em'\r\n  }\r\n}))\r\n\r\nconst ProfileHead = ({ profile }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.profileHeadContainer}>\r\n      <img alt='avatar' src={profile.avatarUrl} className={classes.avatar}/>\r\n      <div className={classes.profileName}>\r\n        {profile.name}\r\n      </div>\r\n      <div className={classes.profileUsername}>\r\n        {profile.username}\r\n      </div>\r\n      <div className={classes.profileBlogUrl}>\r\n        {profile.blog}\r\n      </div>\r\n      <div className={classes.profileEmail}>\r\n        {profile.email}\r\n      </div>\r\n      <Button variant='outlined' className={classes.profileButton}>\r\n        Follow\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileHead;\r\n","import React, { useEffect } from 'react';\r\nimport ScrollBooster from \"scrollbooster\";\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport ProfileInfo from '../components/profile-info/ProfileInfo';\r\nimport About from '../components/about/About';\r\nimport Organizations from '../components/organizations/Organizations';\r\nimport Repositories from '../components/repositories/Repositories';\r\nimport ProfileHead from '../components/profile-head/ProfileHead';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  profileHead: {\r\n    backgroundColor: 'white',\r\n    position: 'sticky',\r\n    top: 0,\r\n    width: '100%',\r\n    margin: '0',\r\n    zIndex: 1,\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(3),\r\n  },\r\n  profileBody: {\r\n    marginBottom: theme.spacing(8),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  viewport: {\r\n    width: '100%',\r\n    height: '20em',\r\n    overflow: 'hidden',\r\n    cursor: 'grabbing',\r\n  }\r\n}))\r\n\r\n// Remember 50 api calls per hour\r\n\r\nconst ScrollArea = ({ viewportClass, children }) =>\r\n  <div className={viewportClass} id='viewport'>\r\n    <div id='content'>\r\n      { children }\r\n    </div>\r\n  </div>\r\n\r\n\r\nfunction App({ profile }) {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    new ScrollBooster({\r\n      viewport: document.querySelector(\"#viewport\"),\r\n      content: document.querySelector(\"#content\"),\r\n      direction: \"vertical\",\r\n      scrollMode: \"transform\"\r\n    });\r\n  }, [])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.profileHead}>\r\n        <ProfileHead profile={profile} />\r\n      </div>\r\n      <ScrollArea viewportClass={classes.viewport}>\r\n        <Grid container direction='column' justify='center' spacing={3}\r\n              className={classes.profileBody}>\r\n          <Grid item>\r\n            <ProfileInfo repositoriesCount={profile.repositoriesCount} starsCount={profile.starsCount}\r\n                         followersCount={profile.followersCount} followingCount={profile.followingCount} />\r\n          </Grid>\r\n          <Grid item>\r\n            <About description={profile.description} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Organizations organizations={profile.organizations} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Repositories repositories={profile.repositories} focused={0} />\r\n          </Grid>\r\n        </Grid>\r\n      </ScrollArea>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/styles';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    '& label.Mui-focused': {\r\n      color: 'black',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: 'black',\r\n    }\r\n  },\r\n})(TextField);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  usernameContainer: {\r\n    paddingTop: theme.spacing(16)\r\n  },\r\n  submit: {\r\n    border: '2px solid #23292D',\r\n    borderRadius: '30px',\r\n    marginTop: '0.8em',\r\n    width: '8em'\r\n  },\r\n}))\r\n\r\nconst InputUsername = ({ setUsername, handleSearch }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container direction='column' align='center' className={classes.usernameContainer}>\r\n      <Grid item>\r\n        <CssTextField label='Username' onChange={e => {setUsername(e.target.value)}}/>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button className={classes.submit} onClick={handleSearch}>\r\n          Search\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default InputUsername;\r\n","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nconst SnackbarMessage = ({ open, handleClose, message }) => {\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'center',\r\n      }}\r\n      open={open}\r\n      autoHideDuration={3000}\r\n      onClose={handleClose}\r\n      message={message}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SnackbarMessage;\r\n","const getUserStars = (username) =>\r\n  fetch(`https://api.github.com/users/${username}/starred`)\r\n  .then(resp => resp.json())\r\n  .then(starred => starred.length)\r\n\r\nconst getUserProfile = (username) =>\r\n  fetch(`https://api.github.com/users/${username}`)\r\n  .then(resp => resp.json())\r\n\r\nconst getUserOrganizations = (username) =>\r\n  fetch(`https://api.github.com/users/${username}/orgs`)\r\n    .then(resp => resp.json())\r\n    .then(orgs => orgs.map(\r\n      org => ({ avatarUrl: org.avatar_url })\r\n    ))\r\n\r\nconst getUserRepositories = (username) =>\r\n  fetch(`https://api.github.com/users/${username}/repos`)\r\n    .then(resp => resp.json())\r\n    .then(repos => repos.map(\r\n      repo => ({ name: repo.name,\r\n                 description: repo.description })\r\n    ))\r\n\r\nexport const getGithubProfile = (username) => {\r\n  const promises = [\r\n    getUserProfile(username),\r\n    getUserStars(username),\r\n    getUserOrganizations(username),\r\n    getUserRepositories(username)\r\n  ];\r\n\r\n  return Promise.all(promises)\r\n    .then(values => {\r\n      const profile = values[0];\r\n      const stars = values[1];\r\n      const organizations = values[2];\r\n      const repositories = values[3];\r\n\r\n      return {...profile,\r\n        username: profile.login,\r\n        avatarUrl: profile.avatar_url,\r\n\r\n        repositoriesCount: profile.public_repos,\r\n        starsCount: stars,\r\n        followersCount: profile.followers,\r\n        followingCount: profile.following,\r\n\r\n        description: profile.bio,\r\n        organizations: organizations,\r\n        repositories: repositories\r\n      }\r\n    })\r\n}\r\n\r\n\r\n","import React, { useState } from 'react';\n\nimport Container from '@material-ui/core/Container';\n\nimport Profile from './pages/Profile'\nimport InputUsername from './pages/InputUsername'\nimport SnackbarMessage from './components/snackbar-message/SnackbarMessage'\n\nimport { getGithubProfile } from './api/github-api';\n\nconst defaultProfile = {\n  name: 'Ashley Simpson',\n  username: 'ashley',\n  blog: 'www.ahsleydev.com',\n  avatarUrl: 'https://avatars1.githubusercontent.com/u/21105282?v=4',\n  email: 'ashley@techcompany.com',\n\n  repositoriesCount: 3,\n  starsCount: 128,\n  followersCount: 15,\n  followingCount: 60,\n\n  description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Cupiditate distinctio eum ex illum, iste minima optio vel? Aliquam animi, culpa et id nam neque tempore ut? Doloremque dolores non saepe.',\n\n  organizations: [\n    {\n      avatarUrl: 'https://avatars1.githubusercontent.com/u/35373879?v=4'\n    }\n  ],\n\n  repositories: [\n    {\n      name: 'Data manager',\n      description: 'Quick start for big data projects'\n    },\n    {\n      name: 'Data manager',\n      description: 'Quick start for big data projects'\n    },\n    {\n      name: 'Data manager',\n      description: 'Quick start for big data projects'\n    },\n    {\n      name: 'Analisis_Numerico',\n      description: 'Programa final del curso de analisis numerico.'\n    }\n  ],\n}\n\n// Remember 50 api calls per hour\n\nfunction App() {\n  const [route, setRoute] = useState('input-username');\n  const [username, setUsername] = useState('');\n  const [open, setOpen] = useState(false);\n\n  const [profile, setProfile] = useState(defaultProfile);\n\n  const handleSearch = () => {\n    getGithubProfile(username)\n      .then(profile => {\n        setRoute('profile');\n        setProfile(profile);\n      })\n      .catch(error => {\n        console.log(error);\n        setOpen(true);\n      })\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  }\n\n  return (\n    <Container maxWidth='xs'>\n      {\n        route === 'input-username'?\n          <InputUsername setUsername={setUsername}\n                         handleSearch={handleSearch} />\n        :\n          <Profile open={open} profile={profile} />\n      }\n\n      <SnackbarMessage message=\"The username is not valid\"\n                       open={open} handleClose={handleClose}/>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    h1: {\r\n      fontFamily: 'Inter, sans-serif',\r\n      fontWeight: '700',\r\n      fontSize: '18px',\r\n      lineHeight: '21px',\r\n      color: '#1F1F1F'\r\n    }\r\n  }\r\n})\r\n\r\nexport default theme;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport theme from './theme'\nimport { ThemeProvider } from '@material-ui/core/styles';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}